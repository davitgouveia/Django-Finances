# Generated by Django 4.2.4 on 2023-09-21 14:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def insert_initial_repeatability_data(apps, schema_editor):
    cnfRepeatability = apps.get_model('transactions', 'cnfRepeatability')  # Replace 'your_app_name' with your actual app name

    repeatability_values = [
        'Single',
        'Daily',
        'Weekly',
        'Monthly',
        'Annually',
        'Indefinitely',
        'Specific',
    ]
    
    for value in repeatability_values:
        cnfRepeatability.objects.create(repeatability=value)
        
def insert_initial_status_data(apps, schema_editor):
    TransactionStatus = apps.get_model('transactions', 'TransactionStatus')  # Replace 'your_app_name' with your actual app name

    status_values = [
        'Active',
        'Inactive',
        'Paid',
        'Not Paid',
        'Receivable',
        'Received',
    ]
    
    for value in status_values:
        TransactionStatus.objects.create(status=value)

def insert_initial_type_data(apps, schema_editor):
    TransactionType = apps.get_model('transactions', 'TransactionType')  # Replace 'your_app_name' with your actual app name

    status_values = [
        'Expense',
        'Income',
    ]
    
    for value in status_values:
        TransactionType.objects.create(type=value)

class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('transactions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='cnfRepeatability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repeatability', models.CharField(max_length=15)),
            ],
        ),
        
        migrations.RunPython(insert_initial_repeatability_data),
        
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('transactions_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transactions.transactions')),
                ('dueDate', models.DateField()),
            ],
            bases=('transactions.transactions',),
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('transactions_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transactions.transactions')),
                ('dueDate', models.DateField()),
            ],
            bases=('transactions.transactions',),
        ),
        migrations.CreateModel(
            name='TransactionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10)),
            ],
        ),
        
        migrations.RunPython(insert_initial_status_data),
        
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10)),
            ],
        ),
        
        migrations.RunPython(insert_initial_type_data),
        
        migrations.RenameField(
            model_name='transactions',
            old_name='user',
            new_name='idUser',
        ),
        migrations.RemoveField(
            model_name='transactions',
            name='category',
        ),
        migrations.RemoveField(
            model_name='transactions',
            name='expense',
        ),
        migrations.AddField(
            model_name='transactions',
            name='transactionDescription',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='TransactionRepeatability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idRepeatability', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.cnfrepeatability')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryName', models.CharField(max_length=50)),
                ('categoryColor', models.CharField(max_length=10)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountName', models.CharField(max_length=50)),
                ('accountColor', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=10)),
                ('billCloseDate', models.IntegerField()),
                ('billDueDate', models.IntegerField()),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='transactions',
            name='idCategory',
            field=models.ForeignKey(null=True, on_delete=models.SET(1), to='transactions.transactioncategory'),
        ),
        migrations.AddField(
            model_name='transactions',
            name='idRepeatable',
            field=models.ForeignKey(on_delete=models.SET(1), to='transactions.transactionrepeatability', null=True),
        ),
        migrations.AddField(
            model_name='transactions',
            name='idStatus',
            field=models.ForeignKey(default=1, on_delete=models.SET(1), to='transactions.transactionstatus'),
        ),
        migrations.AddField(
            model_name='transactions',
            name='idTransactionAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transactions.transactionaccount', null=True),
        ),
        migrations.AddField(
            model_name='transactions',
            name='idType',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='transactions.transactiontype'),
        ),
    ]
